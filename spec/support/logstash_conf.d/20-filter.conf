#Extract the basic soar formatting fields
filter{
    json{
        source => "message"
        add_tag => [ "soar", "json_input_format" ]
    }
}

filter {
  if "_jsonparsefailure" in [tags] {
    grok {
      patterns_dir => ["/etc/logstash/conf.d/patterns"]
      match => { "message" => "%{LOGLEVEL:audit_level},%{SERVICE_ID:audit_service_id},%{BASE16NUM:audit_flow_id},%{TIMESTAMP_ISO8601:audit_timestamp},%{MESSAGE_FIELD}" }
      add_tag => [ "soar", "non_json_input_format" ]
      tag_on_failure => ["soar_auditing_format_parse_failure"]
    }
  }
}

#If there is an optional key field, extract and create such a key pair.
filter {
  if [audit_optional_field_key] {
    mutate {
      add_field => { "audit_opt_field_%{audit_optional_field_key}" => "%{audit_optional_field_value}" }
      add_tag => [ "soar_optional_field" ]
    }
  }
}

#Check if the optional field value string contains a number. If so, convert to number field for use in analytics
filter {
  if [audit_optional_field_value] =~ /^-?\d+\.?\d+/ {
    mutate {
      add_field => { "audit_opt_field_number" => "%{audit_optional_field_value}" }
      add_tag => [ "soar_optional_field_with_number" ]
    }
  }
}
filter {
  if "soar_optional_field_with_number" in [tags] {
    mutate {
      remove_field => [ "audit_opt_field_%{audit_optional_field_key}" ]
    }
  }
}
filter {
  if "soar_optional_field_with_number" in [tags] {
    mutate {
      convert => { "audit_opt_field_number" => "float" }
    }
  }
}
filter {
  if "soar_optional_field_with_number" in [tags] {
    mutate {
      add_field => { "audit_opt_field_%{audit_optional_field_key}" => "%{audit_opt_field_number}"  }
    }
  }
}
filter {
  if "soar_optional_field_with_number" in [tags] {
    mutate {
      remove_field => [ "audit_opt_field_number" ]
    }
  }
}
